#!/usr/bin/env ruby

# Copyright (c) 2011, Dustin Barker <dustin.barker@gmail.com>
# All rights reserved.

TASKS_FILE = ".gitodo"
TASKS_PATH = File.join [ ENV['HOME'], TASKS_FILE ]

def tasks_file(mode, &block)
  File.open(TASKS_PATH, mode, 0644) { |f| yield f }
end

def tasks
  tasks_file("r") { |f|
    f.readlines
  }
end

def add(task)
  tasks_file("a+") { |f|
    f.puts(task)
  }
end

def write_tasks(tasks)
  tasks_file("w+") { |f|
    tasks.each { |task|
      f.puts task
    }
  }
end

def rm(taskid)
  all_tasks = tasks
  all_tasks.delete_at(taskid)
  write_tasks(all_tasks)
end

def list
  if tasks.size == 0
    puts "No tasks."
    puts "To add a task, type: git add '<task>'"
  else
    tasks.each_with_index { |task, i| puts "#{i} #{task}" }
  end
end

def top
  tasks[0]
end

def commit(task_id)
  # FIXME: only rm the task_id if the commit succeeded.
  # or
  # make sure is something to commit at least
  message = tasks[task_id]
  rm task_id
  exec "git commit -am '#{message}'"
end

def edit
  exec "#{ENV['EDITOR']} #{TASKS_PATH}"
end

case ARGV[0]
  when "add"
    if ARGV.size == 2
      add ARGV[1]
      puts "Added task: #{ARGV[1]}"
    else
      if ARGV.size < 2
        puts "Not enough arguments."
      else
        puts "Too many arguments."
      end
      puts "usage: gitodo add PATH"
    end 
  when "rm"
    if ARGV[1]
      rm ARGV[1].to_i
    else
      puts "Not enough arguments."
      puts "usage: gitodo rm PATH"
    end 
  when "edit"
    edit
  when "list"
    list
  when "top"
    puts top
  when "commit"
    commit(ARGV[1].to_i)
  when nil
    puts "Type gitodo help' for usage." 
  else
    puts "Unknown command: #{ARGV[0]}"
    puts "Type gitodo help' for usage." 
end 

