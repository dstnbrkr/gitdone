#!/usr/bin/env ruby

require 'enumerator'

TASKS_FILE = ".gitodo"
TASKS_PATH = File.join [ ENV['HOME'], TASKS_FILE ]

def tasks_file(&block)
  File.open(TASKS_PATH, "a+", 0644) { |f| yield f }
end

def tasks
  tasks_file { |f|
    f.readlines
  }
end

def add(task)
  tasks_file { |f|
    f.puts(task)
  }
end

def list
  tasks.each_with_index { |task, i| puts "#{i} #{task}" }
end

case ARGV[0]
  when "add"
    if ARGV[1]
      add ARGV[1]
      puts "Added task: #{ARGV[1]}"
    else
      puts "Not enough arguments."
      puts "usage: gitodo add PATH"
    end 
  when "rm"
    if ARGV[1]
      rm ARGV[1]
    else
      puts "Not enough arguments."
      puts "usage: gitodo rm PATH"
    end 
  when "edit"
    puts "editing"
  when "list"
    list
  when "top"
    puts "top"
  when "commit"
    if ARGV[1]
      puts "committing #{ARGV[1]}"
    else
      puts "commit top task"
    end
  when nil
    puts "Type gitodo help' for usage." 
  else
    puts "Unknown command: #{ARGV[0]}"
    puts "Type gitodo help' for usage." 
end

